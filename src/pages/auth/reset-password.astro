---
import AuthLayout from "../../layouts/AuthLayout.astro";
import { ResetPasswordForm } from "../../components/auth/ResetPasswordForm";
import { UpdatePasswordForm } from "../../components/auth/UpdatePasswordForm";
import { createSupabaseServerInstance } from "../../db/supabase.client";

// Get URL parameters
const url = new URL(Astro.request.url);
// Supabase sends 'code' parameter when user clicks the reset password link
const code = url.searchParams.get("code");

// If user clicks the reset password link from email, they have a 'code' parameter
// This means they should see the UpdatePasswordForm to set a new password
let isRecoveryMode = !!code;
let errorMessage = "";

// If we have a code, exchange it for a session
if (code) {
  try {
    const supabase = createSupabaseServerInstance({
      cookies: Astro.cookies,
      headers: Astro.request.headers,
    });

    const { error } = await supabase.auth.exchangeCodeForSession(code);

    if (error) {
      // Log error for debugging
      if (import.meta.env.DEV) {
        // eslint-disable-next-line no-console
        console.error("Error exchanging code for session:", error);
      }
      errorMessage = "Link resetujący jest nieprawidłowy lub wygasł. Poproś o nowy link.";
      isRecoveryMode = false;
    }
  } catch (error) {
    // Log error for debugging
    if (import.meta.env.DEV) {
      // eslint-disable-next-line no-console
      console.error("Error during code exchange:", error);
    }
    errorMessage = "Wystąpił błąd podczas weryfikacji linku. Spróbuj ponownie.";
    isRecoveryMode = false;
  }
}

// If user is already logged in and not in recovery mode, redirect to home
if (Astro.locals.user && !isRecoveryMode) {
  return Astro.redirect("/");
}
---

<AuthLayout title="Resetowanie hasła - 10x Fiszki">
  {
    errorMessage && (
      <div
        class="w-full max-w-md mb-4 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md"
        role="alert"
      >
        <p class="text-sm text-red-600 dark:text-red-400">{errorMessage}</p>
      </div>
    )
  }
  {isRecoveryMode ? <UpdatePasswordForm client:load /> : <ResetPasswordForm client:load />}
</AuthLayout>
